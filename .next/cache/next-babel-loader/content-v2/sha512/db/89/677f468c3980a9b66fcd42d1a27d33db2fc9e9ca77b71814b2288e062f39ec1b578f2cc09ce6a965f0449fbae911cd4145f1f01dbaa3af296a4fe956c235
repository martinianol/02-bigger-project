{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mars/Documents/learning/react-js/section-21-nextjs/02-bigger-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetupId\n  const client = await MongoClient.connect(\"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsIds.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport default MeetUpDetailsPage;","map":{"version":3,"sources":["/Users/mars/Documents/learning/react-js/section-21-nextjs/02-bigger-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetUpDetailsPage","props","meetupData","image","title","address","description","getStaticProps","context","client","connect","db","meetupsCollection","collection","meetupId","params","selectedMeetup","findOne","_id","console","log","close","id","toString","getStaticPaths","meetupsIds","find","toArray","fallback","paths","map","meetup"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,QAAQ,GAAGN,OAAO,CAACO,MAAR,CAAeD,QAAhC;AACA,QAAME,cAAc,GAAG,MAAMJ,iBAAiB,CAACK,OAAlB,CAA0B;AACrDC,IAAAA,GAAG,EAAEpB,QAAQ,CAACgB,QAAD;AADwC,GAA1B,CAA7B;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AAEAP,EAAAA,MAAM,CAACY,KAAP;AAEA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVoB,QAAAA,EAAE,EAAEN,cAAc,CAACE,GAAf,CAAmBK,QAAnB,EADM;AAEVnB,QAAAA,KAAK,EAAEY,cAAc,CAACZ,KAFZ;AAGVD,QAAAA,KAAK,EAAEa,cAAc,CAACb,KAHZ;AAIVE,QAAAA,OAAO,EAAEW,cAAc,CAACX,OAJd;AAKVC,QAAAA,WAAW,EAAEU,cAAc,CAACV;AALlB;AADP;AADF,GAAP;AAWD;AAED,OAAO,eAAekB,cAAf,GAAgC;AACrC,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMY,UAAU,GAAG,MAAMb,iBAAiB,CAACc,IAAlB,CAAuB,EAAvB,EAA2B;AAAER,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCS,OAAvC,EAAzB;AAEAlB,EAAAA,MAAM,CAACY,KAAP;AAEA,SAAO;AACLO,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEJ,UAAU,CAACK,GAAX,CAAgBC,MAAD,KAAa;AACjChB,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAEiB,MAAM,CAACb,GAAP,CAAWK,QAAX;AADJ;AADyB,KAAb,CAAf;AAFF,GAAP;AAQD;AAED,eAAevB,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetailsPage = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetupId\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  console.log(selectedMeetup);\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetupsIds.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport default MeetUpDetailsPage;\n"]},"metadata":{},"sourceType":"module"}