{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mars/Documents/learning/react-js/section-21-nextjs/02-bigger-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"nextjs/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add a new meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetup and create amazing network opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetupId\n  const client = await MongoClient.connect(\"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsIds.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport default MeetUpDetailsPage;","map":{"version":3,"sources":["/Users/mars/Documents/learning/react-js/section-21-nextjs/02-bigger-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Head","MeetupDetail","MeetUpDetailsPage","props","meetupData","image","title","address","description","getStaticProps","context","client","connect","db","meetupsCollection","collection","meetupId","params","selectedMeetup","findOne","_id","close","id","toString","getStaticPaths","meetupsIds","find","toArray","fallback","paths","map","meetup"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAiBD,CAlBD;;AAoBA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,QAAQ,GAAGN,OAAO,CAACO,MAAR,CAAeD,QAAhC;AACA,QAAME,cAAc,GAAG,MAAMJ,iBAAiB,CAACK,OAAlB,CAA0B;AACrDC,IAAAA,GAAG,EAAErB,QAAQ,CAACiB,QAAD;AADwC,GAA1B,CAA7B;AAIAL,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVkB,QAAAA,EAAE,EAAEJ,cAAc,CAACE,GAAf,CAAmBG,QAAnB,EADM;AAEVjB,QAAAA,KAAK,EAAEY,cAAc,CAACZ,KAFZ;AAGVD,QAAAA,KAAK,EAAEa,cAAc,CAACb,KAHZ;AAIVE,QAAAA,OAAO,EAAEW,cAAc,CAACX,OAJd;AAKVC,QAAAA,WAAW,EAAEU,cAAc,CAACV;AALlB;AADP;AADF,GAAP;AAWD;AAED,OAAO,eAAegB,cAAf,GAAgC;AACrC,QAAMb,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMU,UAAU,GAAG,MAAMX,iBAAiB,CAACY,IAAlB,CAAuB,EAAvB,EAA2B;AAAEN,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCO,OAAvC,EAAzB;AAEAhB,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLO,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEJ,UAAU,CAACK,GAAX,CAAgBC,MAAD,KAAa;AACjCd,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAEe,MAAM,CAACX,GAAP,CAAWG,QAAX;AADJ;AADyB,KAAb,CAAf;AAFF,GAAP;AAQD;AAED,eAAerB,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"nextjs/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetailsPage = (props) => {\n  return (\n    <>\n      <Head>\n        <title>Add a new meetup</title>\n        <meta\n          name=\"description\"\n          content=\"Add your own meetup and create amazing network opportunities\"\n        />\n      </Head>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </>\n  );\n};\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetupId\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetupsIds.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport default MeetUpDetailsPage;\n"]},"metadata":{},"sourceType":"module"}