{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mars/Documents/learning/react-js/section-21-nextjs/02-bigger-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetupId\n  const client = await MongoClient.connect(\"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetup: {\n        selectedMeetup\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsIds.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport default MeetUpDetailsPage;","map":{"version":3,"sources":["/Users/mars/Documents/learning/react-js/section-21-nextjs/02-bigger-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetUpDetailsPage","props","image","title","address","description","getStaticProps","context","client","connect","db","meetupsCollection","collection","meetupId","params","selectedMeetup","findOne","_id","close","meetup","getStaticPaths","meetupsIds","find","toArray","fallback","paths","map","toString"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,QAAQ,GAAGN,OAAO,CAACO,MAAR,CAAeD,QAAhC;AACA,QAAME,cAAc,GAAG,MAAMJ,iBAAiB,CAACK,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAEJ;AAAN,GAA1B,CAA7B;AAEAL,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLkB,MAAAA,MAAM,EAAE;AACNJ,QAAAA;AADM;AADH;AADF,GAAP;AAOD;AAED,OAAO,eAAeK,cAAf,GAAgC;AACrC,QAAMZ,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,UAAU,GAAG,MAAMV,iBAAiB,CAACW,IAAlB,CAAuB,EAAvB,EAA2B;AAAEL,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCM,OAAvC,EAAzB;AAEAf,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLM,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEJ,UAAU,CAACK,GAAX,CAAgBP,MAAD,KAAa;AACjCL,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAEM,MAAM,CAACF,GAAP,CAAWU,QAAX;AADJ;AADyB,KAAb,CAAf;AAFF,GAAP;AAQD;AAED,eAAe3B,iBAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetailsPage = (props) => {\n  return (\n    <MeetupDetail\n      image={props.image}\n      title={props.title}\n      address={props.address}\n      description={props.description}\n    />\n  );\n};\n\nexport async function getStaticProps(context) {\n  // fetch data for single meetupId\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupId = context.params.meetupId;\n  const selectedMeetup = await meetupsCollection.findOne({_id: meetupId})\n\n  client.close();\n\n  return {\n    props: {\n      meetup: {\n        selectedMeetup\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mars:1234@reactudemy.4yyddfw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetupsIds.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport default MeetUpDetailsPage;\n"]},"metadata":{},"sourceType":"module"}